package myreader.fetcher.icon.impl;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;

import javax.imageio.ImageIO;

import myreader.fetcher.icon.IconResult;

import org.springframework.stereotype.Component;

@Component
class DefaultIconProvider {

    private static final byte[] DEFAULT = { -119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 16,
            0, 0, 0, 16, 8, 6, 0, 0, 0, 31, -13, -1, 97, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4,
            103, 65, 77, 65, 0, 0, -79, -113, 11, -4, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, -61, 0, 0, 14,
            -61, 1, -57, 111, -88, 100, 0, 0, 0, 26, 116, 69, 88, 116, 83, 111, 102, 116, 119, 97, 114, 101, 0, 80, 97,
            105, 110, 116, 46, 78, 69, 84, 32, 118, 51, 46, 53, 46, 49, 48, 48, -12, 114, -95, 0, 0, 3, 66, 73, 68, 65,
            84, 56, 79, -115, -109, -19, 79, -101, 101, 20, -121, -7, 7, -58, 39, -121, 25, -107, 73, -91, 25, 58, -84,
            115, -122, -116, 8, -53, 50, 63, -111, 101, -6, 65, 23, 80, -39, 28, 123, -111, 100, 19, -25, -34, 113,
            -52, -83, -78, -63, -102, 50, 74, -94, 99, 99, 2, -125, -104, -87, 77, -124, -71, 56, -30, -124, -72, -88,
            40, 106, 38, -61, 96, 8, -95, -82, -27, -23, -24, 11, -19, -61, -45, 119, 90, -6, -102, -19, -14, 110,
            -101, -123, 15, 126, -15, 78, 126, -55, -99, -109, -13, -69, -18, 115, -97, -100, -109, -105, 39, -114, -3,
            104, -7, -108, -44, -96, -63, -70, -21, 73, -84, 117, 79, 32, -19, 44, 64, -38, 85, -128, -19, 63, 90, 45,
            98, 66, 123, -117, -80, 31, -38, 48, -107, -15, 102, -51, -74, 3, -91, 49, -13, 62, 53, 115, -70, 109, 56,
            -69, 26, 112, 26, 107, 113, -24, -74, -32, 60, 90, -126, -69, 105, 29, -34, -113, 74, 9, -76, 60, 75, -88,
            109, 61, 75, -6, 50, 34, -122, 50, 66, 122, 109, 44, 11, -111, 118, -81, -63, -78, 95, -51, -20, -31, 114,
            -28, -31, 46, -30, -10, 25, 98, -74, 41, 98, -9, 127, 39, 54, 61, 74, 120, -76, -125, 80, -49, -85, 68, 46,
            85, 16, -65, 82, 78, -14, -77, 77, -92, 122, -54, -119, 118, -84, 71, 122, 51, -97, -68, -71, -38, 85, 88,
            -33, 125, 26, -53, -87, -51, -72, 7, -49, 19, -70, 119, -117, -48, -44, 109, 34, -1, -116, 19, -105, -83,
            -92, 20, -119, -60, -20, 8, -15, -97, -38, 72, -104, 94, 39, -43, 95, 73, -70, -1, 101, -106, -115, 101,
            -52, -67, -106, -105, 3, -40, 14, 20, 35, 53, -67, -60, -68, -15, 13, 92, -67, -5, 89, -24, -37, -117, -25,
            -53, -9, -16, -115, -22, 5, -24, 71, 82, 65, 23, 105, 121, -122, -44, -35, 46, 82, 67, -75, 2, 82, 69, -44,
            -8, 66, 14, -112, 41, -29, 65, -93, 26, -23, -92, 22, 87, -49, 62, 124, -73, 90, -15, 13, 29, 71, -7, -68,
            14, -49, -43, 106, 60, 95, -20, 38, -8, 71, 31, 9, -59, 66, 90, 49, -109, 26, 55, -112, -20, -85, 20, 125,
            120, 110, 5, 48, 127, 72, 0, 90, -86, -16, -113, 95, 39, 29, -15, 101, 95, -116, 91, -57, -120, -36, 57,
            -121, 111, 96, 27, -82, -18, -83, -8, 127, -19, 34, -23, -97, 39, 109, 30, 38, 126, -19, 21, -62, -70, -94,
            21, -128, -13, -104, 6, -25, -123, 74, 100, -45, -5, -8, -57, -82, 16, -103, -3, -127, -121, -55, 101, 30,
            37, -93, -60, 39, -82, -30, -67, 92, -127, -21, -14, 86, -106, -2, -2, -122, -76, 123, -102, -40, 119, -51,
            4, -102, 11, 87, 0, -117, -89, 75, -15, 27, 54, 18, -24, -36, -120, -41, -88, -59, -3, -55, 38, -28, -95,
            70, -30, -114, -55, 44, 36, 50, -4, 1, -82, -114, 23, -15, -104, 26, 88, -74, -114, -109, -100, -71, -115,
            114, 82, -11, -72, -119, -7, -56, -51, 26, 124, 109, 37, 4, -11, 107, 9, -73, 63, 69, -32, -30, 90, 60,
            -99, 90, 22, -82, -17, -28, 97, 34, 74, -62, 60, -126, -69, 91, -52, 72, 111, 13, -31, -23, 17, -110, -42,
            -33, 88, 108, -87, -56, 1, -18, -41, -28, 99, 63, -79, 6, -81, 72, -114, -35, -19, 35, 53, 121, -115, -27,
            27, -17, -32, 107, 47, 102, -34, -80, -127, -120, -7, 14, -23, -96, 3, -7, -85, -125, -40, -69, 107, 8, 78,
            126, 75, 66, -102, 64, -66, 80, -99, 3, -104, 119, -28, 99, 61, -74, -102, -64, -40, 37, -46, 97, 15, -113,
            98, 126, 82, 127, 13, 16, -68, 88, -116, -93, 117, 29, -2, -97, 69, 92, 52, 86, -71, 121, 70, 0, -22, 8,
            -4, 121, -109, -124, 24, 54, -7, -45, 61, 57, -64, -20, -114, 85, -52, -99, 40, 32, -8, -117, 72, 92, -110,
            115, -128, -55, 1, -62, 6, 53, -18, 86, 13, -118, -23, 32, -47, 123, -125, -56, -67, -11, -94, -94, -19,
            -56, 95, -97, 39, -16, 125, 47, -114, -77, -37, 115, 0, -117, 88, -100, -123, -45, -123, -8, 77, -30, 11,
            19, -3, 36, -123, 57, 54, 88, 79, 88, -81, -58, 123, -82, -124, -59, -10, 42, -108, -50, 106, 92, 31, 106,
            -79, 29, 121, 30, 91, -45, 22, -92, 35, -101, -79, -68, 93, -108, 27, -27, 7, 98, 33, -108, -77, -49, -60,
            124, 31, -85, -16, -23, 10, 9, -24, 84, 4, -50, -88, -16, -97, 82, -95, 28, 87, -31, 62, -84, 98, -95, 81,
            -123, -67, 65, -123, 84, -81, 18, 70, -95, -73, -60, 12, -20, -47, -28, -106, 41, -69, -111, -30, -110,
            -95, 101, 74, -6, 63, -54, -28, 62, 54, -1, 11, -28, 124, -63, -65, -45, -56, 10, 85, 0, 0, 0, 0, 73, 69,
            78, 68, -82, 66, 96, -126 };

    public IconResult get() {
        IconResult result = null;
        try {
            InputStream in = new ByteArrayInputStream(DEFAULT);
            BufferedImage bImageFromConvert = ImageIO.read(in);
            result = new IconResult("image/png", bImageFromConvert);
        } catch (Exception e) {
        }

        return result;
    }
}
