plugins {
    id "jacoco"
    id "org.springframework.boot" version "2.1.6.RELEASE"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id "org.owasp.dependencycheck" version "5.0.0"
    id "com.github.psxpaul.execfork" version "0.1.9"
    id "com.github.spotbugs" version "1.7.1"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'

repositories {
    mavenCentral()
}

def javaLangVersion = '1.8'
def romeToolsVersion = '1.12.0'
def commonsLang3Version = '3.8.1'
def commonsIoVersion = '2.6'
def commonsTextVersion = '1.6'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.security:spring-security-data'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.10.5.Final'
    compile group: 'org.hsqldb', name: 'hsqldb'
    compile group: 'org.flywaydb', name: 'flyway-core'
    compile group: 'com.rometools', name: 'rome', version: "${romeToolsVersion}"
    compile group: 'com.rometools', name: 'rome-modules', version: "${romeToolsVersion}"
    compile(group: 'org.apache.httpcomponents', name: 'httpclient') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLang3Version}"
    compile group: 'commons-io', name: 'commons-io', version: "${commonsIoVersion}"
    compile group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20181114.1'
    implementation "org.apache.commons:commons-text:${commonsTextVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

compileJava {
    targetCompatibility = javaLangVersion
    sourceCompatibility = javaLangVersion
}

pmd {
    ruleSets = []
    ruleSetConfig = resources.text.fromFile("$projectDir/rulesets.xml")
}

bootJar {
    archiveFileName = 'myreader.jar'
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}

springBoot {
    buildInfo()
}

dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile = "${projectDir}/owasp/cve_suppress.xml"
    analyzers {
        jarEnabled = false
    }
}

task devRun(type: com.github.psxpaul.task.ExecFork) {
    def withAppTasks = project.hasProperty('withAppTasks') as String

    environment << ['TASK_ENABLED' : withAppTasks]
    commandLine '../gradlew'
    args = ['bootRun']
    waitForOutput 'Started Starter'
}

task resolve() {
    doLast {
        resolveDependencies(project)
    }
}

tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
