plugins {
    id "jacoco"
    id "com.gorylenko.gradle-git-properties" version "1.4.6"
    id "com.wiredforcode.spawn" version "0.8.2"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'pmd'
apply plugin: 'findbugs'

group = 'myreader'

jar {
    archiveName = 'myreader.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'
    compile group: 'org.springframework.security', name: 'spring-security-data'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.4.0.Final'
    compile group: 'org.hsqldb', name: 'hsqldb'
    compile group: 'com.rometools', name: 'rome', version: '1.5.1'
    compile(group: 'org.apache.httpcomponents', name: 'httpclient') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.security', name: 'spring-security-test'
    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '1.1.5'
    testCompile(group: 'com.github.tomakehurst', name: 'wiremock', version: '1.57') {
        exclude(module: 'servlet-api')
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR4"
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}

springBoot {
    buildInfo()
    executable = true
}

task startServer(type: SpawnProcessTask) {
    command "java -jar $jar.archivePath"
    ready 'Tomcat started on port(s): 19340 (http)'
}

task stopServer(type: KillProcessTask)

tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
