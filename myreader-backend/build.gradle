plugins {
    id "jacoco"
    id "org.springframework.boot" version "2.3.1.RELEASE"
    id "com.gorylenko.gradle-git-properties" version "2.2.2"
    id "org.owasp.dependencycheck" version "5.3.2.1"
    id "com.github.psxpaul.execfork" version "0.1.13"
    id "com.github.spotbugs" version "4.3.0"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'project-report'

repositories {
    mavenCentral()
}

def javaLangVersion = JavaVersion.VERSION_11
def romeToolsVersion = '1.12.0'
def commonsLang3Version = '3.8.1'
def commonsIoVersion = '2.6'
def commonsTextVersion = '1.6'
def htmlSanitizerVersion = '20190610.1'
def hibernateSearchVersion = '5.11.5.Final'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.security:spring-security-data'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version: hibernateSearchVersion
    compile group: 'org.hsqldb', name: 'hsqldb'
    compile group: 'org.flywaydb', name: 'flyway-core'
    compile group: 'com.rometools', name: 'rome', version: romeToolsVersion
    compile group: 'com.rometools', name: 'rome-modules', version: romeToolsVersion
    compile group: 'org.apache.commons', name: 'commons-lang3', version: commonsLang3Version
    compile group: 'commons-io', name: 'commons-io', version: commonsIoVersion
    implementation "org.apache.commons:commons-text:${commonsTextVersion}"
    implementation "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:${htmlSanitizerVersion}"
    implementation "org.apache.httpcomponents:httpclient"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

spotbugs {
    // https://github.com/spotbugs/spotbugs-gradle-plugin/issues/241
    toolVersion = '4.0.4'
}

spotbugsMain {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

spotbugsTest {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

compileJava {
    targetCompatibility = javaLangVersion
    sourceCompatibility = javaLangVersion
}

pmd {
    ruleSets = []
    ruleSetConfig = resources.text.fromFile("$projectDir/rulesets.xml")
}

bootJar {
    archiveFileName = 'myreader.jar'
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
    }
}

springBoot {
    buildInfo()
}

dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile = "${projectDir}/owasp/cve_suppress.xml"
    analyzers {
        jarEnabled = false
    }
}

task devRun(type: com.github.psxpaul.task.ExecFork) {
    def withAppTasks = project.hasProperty('withAppTasks') as String

    environment << ['TASK_ENABLED' : withAppTasks]
    commandLine '../gradlew'
    args = ['bootRun']
    waitForOutput 'Started Starter'
}

test {
    testLogging {
        exceptionFormat = 'full'

        events = ["failed", "passed", "skipped", "standardOut", "standardError"]
    }
}
