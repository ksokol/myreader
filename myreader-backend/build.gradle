plugins {
    id "jacoco"
    id "org.springframework.boot" version "2.1.3.RELEASE"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id "org.owasp.dependencycheck" version "4.0.2"
    id 'com.github.psxpaul.execfork' version '0.1.8'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'findbugs'

repositories {
    mavenCentral()
}

def javaLangVersion = '1.8'
def romeToolsVersion = '1.12.0'
def commonsLang3Version = '3.8.1'
def commonsIoVersion = '2.6'

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'
    compile group: 'org.springframework.security', name: 'spring-security-data'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.10.5.Final'
    compile group: 'org.hsqldb', name: 'hsqldb'
    compile group: 'org.flywaydb', name: 'flyway-core'
    compile group: 'com.rometools', name: 'rome', version: "${romeToolsVersion}"
    compile group: 'com.rometools', name: 'rome-modules', version: "${romeToolsVersion}"
    compile(group: 'org.apache.httpcomponents', name: 'httpclient') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLang3Version}"
    compile group: 'commons-io', name: 'commons-io', version: "${commonsIoVersion}"
    compile group: 'com.google.guava', name: 'guava', version: '24.1.1-jre' // CVE 19.0 owasp-java-html-sanitizer
    compile group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20181114.1'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.security', name: 'spring-security-test'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

compileJava {
    targetCompatibility = javaLangVersion
    sourceCompatibility = javaLangVersion
}

bootJar {
    archiveName = 'myreader.jar'
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}

springBoot {
    buildInfo()
}

dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile = "${projectDir}/owasp/cve_suppress.xml"
}

task devRun(type: com.github.psxpaul.task.ExecFork) {
    def withAppTasks = project.hasProperty('withAppTasks') as String

    environment << ['TASK_ENABLED' : withAppTasks]
    commandLine '../gradlew'
    args = ['bootRun']
    waitForOutput 'Started Starter'
}

task resolve() {
    doLast {
        resolveDependencies(project)
    }
}

tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
