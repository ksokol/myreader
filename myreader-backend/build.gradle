plugins {
    id "jacoco"
    id "com.github.kt3k.coveralls" version "2.4.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'pmd'
apply plugin: 'findbugs'

group = 'myreader'
version = '0.6'

jar {
    archiveName = 'myreader.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix-dashboard'
    compile group: 'org.springframework.security', name: 'spring-security-data'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.4.0.Final'
    compile group: 'org.hsqldb', name: 'hsqldb'
    compile group: 'com.rometools', name: 'rome', version: '1.5.1'
    compile(group: 'org.apache.httpcomponents', name: 'httpclient') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile project(':myreader-frontend')

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.security', name: 'spring-security-test'
    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '1.1.5'
    testCompile group: 'net.sourceforge.htmlunit', name: 'htmlunit'
    testCompile(group: 'com.github.tomakehurst', name: 'wiremock', version: '1.57') {
        exclude(module: 'servlet-api')
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR4"
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

bootRun {
    /* Lets you pick Spring Boot profile by system properties, e.g. gradle bootRun -Dspring.profiles.active=dev */
    systemProperty "spring.profiles.active", "dev"
}

springBoot {
    executable = true
}


tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}