plugins {
    id 'com.moowork.node' version '1.1.1'
    id 'com.wiredforcode.spawn' version '0.8.2'
}

apply plugin: 'com.moowork.node'

idea.module {
    excludeDirs += [
        file('node_modules'),
        file('build'),
        file('dist')
    ]
}

node {
    version = '10.15.0'
    npmVersion = '6.4.1'
    download = true
}

task resolve(dependsOn: npm_install) {
    doLast {
        resolveDependencies(project)
    }
}

task dependencyCheckAnalyze(type: NpmTask, dependsOn: npm_install) {
    args = ['audit']
}

task lint(type: NpmTask, dependsOn: npm_install) {
    args = ['run', 'lint']
}

task test(overwrite: true, dependsOn: [npm_install, npm_test]) {
    inputs.files files('src', 'test', 'webpack.config.js', 'src/tests.webpack.js', 'package.json', 'karma.conf.js')
}

task build(type: NpmTask, dependsOn: [npm_install, test]) {
    outputs.files file('dist')
    inputs.files files('src')

    args = ['run', 'build']
}

task clean() {
    delete "dist"
}

task check(dependsOn: [lint, test])

task startServer(type: SpawnProcessTask) {
    command 'npm start'
    ready 'webpack: Compiled successfully.'
    directory = "${projectDir}"
    pidLockFileName 'build/frontend.lock'
}

task stopServer(type: KillProcessTask) {
    pidLockFileName 'build/frontend.lock'
    directory = "${projectDir}"
}
